Given two sorted arrays arr1[] and arr2[] of sizes n and m in non-decreasing order. Merge them in sorted order without using any extra space. Modify arr1 so that it contains the first N elements and modify arr2 so that it contains the last M elements.

Example 1:

Input: 
n = 4, arr1[] = [1 3 5 7] 
m = 5, arr2[] = [0 2 6 8 9]
Output: 
arr1[] = [0 1 2 3]
arr2[] = [5 6 7 8 9]
Explanation:
After merging the two 
non-decreasing arrays, we get, 
0 1 2 3 5 6 7 8 9.



class Solution{
    public:
        //Function to merge the arrays.
        void merge(long long a1[], long long a2[], int n, int m) 
        { 
            int i=0;
            int j=0;
            
            while(i<n)
            {
                if(a1[i]>a2[j])
                {
                    swap(a1[i],a2[j]);
                    i++;
                    sort(a2,a2+m);
                }
                else
                i++;
            }
        } 
};
